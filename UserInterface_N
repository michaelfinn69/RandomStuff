--[[
    Obfuscated using Prometheus Alpha v0.2 by levno-710
]]
local T=({...})[1]or{}if(getgenv()).library~=nil then(getgenv()).library:Unload()end if not game:IsLoaded()then game.Loaded:Wait()end local function H(T)return game:GetService(T)end local P,d,x,M,w,F,R=H("Players"),H("HttpService"),H("RunService"),H("UserInputService"),H("TweenService"),H("Stats"),H("ContextActionService")local f=P.LocalPlayer local K,v,c,Q,i=math.floor,math.ceil,math.huge,math.pi,math.clamp local o,I,k=Color3.new,Color3.fromRGB,Color3.fromHSV local t,A,a,s=next,Instance.new,UDim2.new,Vector2.new local b=isexecutorclosure or is_synapse_function or is_sirhurt_closure or iskrnlclosure local U=syn and"syn"or getexecutorname and getexecutorname()or"unknown"local e={windows={};indicators={};flags={};options={};connections={};drawings={},instances={},utility={};notifications={};tweens={};theme={},zindexOrder={indicator=950;window=1000,dropdown=1200,colorpicker=1100;watermark=1300,notification=1400,cursor=1500},stats={fps=0;ping=0},images={gradientp90=game:HttpGet("https://i.ibb.co/12Rnbdy/b-MTl-Z7-Zlh6qwfjd-BM3t-WEU95-KYG6-Aa-Pt6-Yxa-NRQv-Qj-ROim1-Q78.png"),gradientp45=game:HttpGet("https://i.ibb.co/XbmdCZC/y-Bl-Cp-Oju-JXSGu-Bat-Jo-Rot5-Ii-Bzt-LDY24mkrdwsra-Hs-YTJvj-Snn.png"),colorhue=game:HttpGet("https://i.ibb.co/740d7fH/gradient.png"),colortrans=game:HttpGet("https://i.ibb.co/0h9xN7t/gradient2.png"),colorsat2=game:HttpGet("https://i.ibb.co/VNSSR6s/colorsat2.png")},numberStrings={Zero=0,One=1,Two=2;Three=3,Four=4;Five=5;Six=6,Seven=7,Eight=8,Nine=9};open=false;opening=false,hasInit=false,cheatname=T.cheatname,gamename=T.gamename or"universal",fileext=T.fileext or".txt"}e.themes={{name="Default";theme={Accent=Color3.new(.92444753646851,.99500000476837,.0049749952740967);Background=I(18,18,18);Border=I(0,0,0);["Border 1"]=I(60,60,60);["Border 2"]=I(35,35,35);["Border 3"]=I(10,10,10),["Primary Text"]=I(235,235,235),["Group Background"]=I(35,35,35),["Selected Tab Background"]=I(35,35,35);["Unselected Tab Background"]=I(18,18,18);["Selected Tab Text"]=I(245,245,245),["Unselected Tab Text"]=I(145,145,145);["Section Background"]=I(18,18,18),["Option Text 1"]=I(245,245,245);["Option Text 2"]=I(195,195,195);["Option Text 3"]=I(145,145,145),["Option Border 1"]=I(50,50,50),["Option Border 2"]=I(0,0,0),["Option Background"]=I(35,35,35),["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}};{name="Tokyo Night",theme={Accent=I(103,89,179);Background=I(22,22,31);Border=I(0,0,0);["Border 1"]=I(50,50,50);["Border 2"]=I(24,25,37);["Border 3"]=I(10,10,10);["Primary Text"]=I(235,235,235);["Group Background"]=I(24,25,37);["Selected Tab Background"]=I(24,25,37),["Unselected Tab Background"]=I(22,22,31),["Selected Tab Text"]=I(245,245,245);["Unselected Tab Text"]=I(145,145,145);["Section Background"]=I(22,22,31);["Option Text 1"]=I(245,245,245),["Option Text 2"]=I(195,195,195);["Option Text 3"]=I(145,145,145),["Option Border 1"]=I(50,50,50);["Option Border 2"]=I(0,0,0),["Option Background"]=I(24,25,37);["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}},{name="Nekocheat",theme={Accent=I(226,30,112);Background=I(18,18,18);Border=I(0,0,0);["Border 1"]=I(60,60,60);["Border 2"]=I(18,18,18);["Border 3"]=I(10,10,10),["Primary Text"]=I(255,255,255),["Group Background"]=I(18,18,18);["Selected Tab Background"]=I(18,18,18);["Unselected Tab Background"]=I(18,18,18);["Selected Tab Text"]=I(245,245,245),["Unselected Tab Text"]=I(145,145,145);["Section Background"]=I(18,18,18),["Option Text 1"]=I(255,255,255);["Option Text 2"]=I(255,255,255);["Option Text 3"]=I(255,255,255);["Option Border 1"]=I(50,50,50),["Option Border 2"]=I(0,0,0);["Option Background"]=I(23,23,23),["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}};{name="Nekocheat Blue";theme={Accent=I(0,247,255),Background=I(18,18,18);Border=I(0,0,0);["Border 1"]=I(60,60,60);["Border 2"]=I(18,18,18);["Border 3"]=I(10,10,10),["Primary Text"]=I(255,255,255);["Group Background"]=I(18,18,18),["Selected Tab Background"]=I(18,18,18),["Unselected Tab Background"]=I(18,18,18);["Selected Tab Text"]=I(245,245,245);["Unselected Tab Text"]=I(145,145,145),["Section Background"]=I(18,18,18),["Option Text 1"]=I(255,255,255);["Option Text 2"]=I(255,255,255),["Option Text 3"]=I(255,255,255),["Option Border 1"]=I(50,50,50);["Option Border 2"]=I(0,0,0),["Option Background"]=I(23,23,23);["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}};{name="Fatality",theme={Accent=I(197,7,83);Background=I(25,19,53);Border=I(0,0,0),["Border 1"]=I(60,53,93);["Border 2"]=I(29,23,66),["Border 3"]=I(10,10,10);["Primary Text"]=I(235,235,235),["Group Background"]=I(29,23,66);["Selected Tab Background"]=I(29,23,66),["Unselected Tab Background"]=I(25,19,53),["Selected Tab Text"]=I(245,245,245),["Unselected Tab Text"]=I(145,145,145),["Section Background"]=I(25,19,53);["Option Text 1"]=I(245,245,245);["Option Text 2"]=I(195,195,195),["Option Text 3"]=I(145,145,145),["Option Border 1"]=I(60,53,93);["Option Border 2"]=I(0,0,0),["Option Background"]=I(29,23,66),["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}},{name="Gamesense",theme={Accent=I(147,184,26);Background=I(17,17,17);Border=I(0,0,0);["Border 1"]=I(47,47,47),["Border 2"]=I(17,17,17);["Border 3"]=I(10,10,10),["Primary Text"]=I(235,235,235);["Group Background"]=I(17,17,17),["Selected Tab Background"]=I(17,17,17);["Unselected Tab Background"]=I(17,17,17);["Selected Tab Text"]=I(245,245,245);["Unselected Tab Text"]=I(145,145,145),["Section Background"]=I(17,17,17);["Option Text 1"]=I(245,245,245);["Option Text 2"]=I(195,195,195);["Option Text 3"]=I(145,145,145);["Option Border 1"]=I(47,47,47),["Option Border 2"]=I(0,0,0);["Option Background"]=I(35,35,35),["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}},{name="Twitch",theme={Accent=I(169,112,255),Background=I(14,14,14);Border=I(0,0,0),["Border 1"]=I(45,45,45),["Border 2"]=I(31,31,35),["Border 3"]=I(10,10,10);["Primary Text"]=I(235,235,235),["Group Background"]=I(31,31,35),["Selected Tab Background"]=I(31,31,35);["Unselected Tab Background"]=I(17,17,17),["Selected Tab Text"]=I(225,225,225);["Unselected Tab Text"]=I(160,170,175),["Section Background"]=I(17,17,17);["Option Text 1"]=I(245,245,245),["Option Text 2"]=I(195,195,195),["Option Text 3"]=I(145,145,145);["Option Border 1"]=I(45,45,45),["Option Border 2"]=I(0,0,0);["Option Background"]=I(24,24,27),["Risky Text"]=I(175,21,21);["Risky Text Enabled"]=I(255,41,41)}}}e.signal=(loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Anomiss01/RS_wadwd/main/lib/signal.lua")))()local g={Enum.KeyCode.Unknown;Enum.KeyCode.W;Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D;Enum.KeyCode.Slash;Enum.KeyCode.Tab;Enum.KeyCode.Escape}local N={Enum.KeyCode.Zero;Enum.KeyCode.One,Enum.KeyCode.Two;Enum.KeyCode.Three;Enum.KeyCode.Four;Enum.KeyCode.Five,Enum.KeyCode.Six,Enum.KeyCode.Seven,Enum.KeyCode.Eight;Enum.KeyCode.Nine}local Z={[Enum.KeyCode.LeftControl]="LCTRL",[Enum.KeyCode.RightControl]="RCTRL";[Enum.KeyCode.LeftShift]="LSHIFT";[Enum.KeyCode.RightShift]="RSHIFT",[Enum.KeyCode.Underscore]="_",[Enum.KeyCode.Minus]="-";[Enum.KeyCode.Plus]="+";[Enum.KeyCode.Period]=".";[Enum.KeyCode.Slash]="/",[Enum.KeyCode.BackSlash]="\\";[Enum.KeyCode.Question]="?",[Enum.UserInputType.MouseButton1]="MB1";[Enum.UserInputType.MouseButton2]="MB2",[Enum.UserInputType.MouseButton3]="MB3"}e.button1down=e.signal.new()e.button1up=e.signal.new()e.mousemove=e.signal.new()e.unloaded=e.signal.new()local W,n,q=e.button1down,e.button1up,e.mousemove local V=false local u=e.utility do function u.Connection(P,T,H)local d=T:Connect(H)table.insert(e.connections,d)return d end function u.DeepCopyTable(H,T)local P={}for T,d in t,T do if typeof(d)=="table"then P[T]=H:DeepCopyTable(d)else P[T]=d end end return P end function u.SetProperties(P,T,H)for H,P in t,H do T[H]=P end return T end function u.CFrameToViewport(H,T)local P=workspace.CurrentCamera return P:WorldToViewportPoint((T*(T-T.p):ToObjectSpace(P.CFrame-P.CFrame.p)).p)end function u.HasCharacter(P,T,H)if T.Character~=nil and(T.Character:FindFirstChild("HumanoidRootPart")and(T.Character:FindFirstChild("Humanoid")and T.Character.Humanoid.Health>(H or 0)))then return true,T.Character end return false end function u.Raycast(d,T,H,P)P=typeof(P)=="table"and P or{}local x=RaycastParams.new()x.IgnoreWater=true x.FilterType=Enum.RaycastFilterType.Blacklist x.FilterDescendantsInstances=P local M=workspace:Raycast(T,H,x)if M~=nil then if M.Instance.Transparency>=.25 or not M.Instance.CanCollide then table.insert(P,M.Instance)local x=d:Raycast(T,H,P)if x~=nil then M=x end end end return M end function u.EnableConnections(P,T,H)for T,P in t,getconnections(T)do if P.Function~=nil and(H and b(P.Function))then return end P:Enable()end end function u.DisableConnections(P,T,H)for T,P in t,getconnections(T)do if P.Function~=nil and(H and b(P.Function))then return end P:Disable()end end function u.Instance(P,T,H)local d=A(T)for T,H in t,H or{}do local P,x=pcall(function()d[T]=H end)if not P then print(x,255,0,0)end end table.insert(e.instances,d)return d end function u.HasProperty(P,T,H)return({pcall(function()local P=T[H]end)})[1]end function u.CheckEnum(P,T,H)if typeof(H)=="EnumItem"then return({pcall(function()local P=T[H.Name]end)})[1]else return false end end function u.ToRGB(H,T)return T.R*255,T.G*255,T.B*255 end function u.AddRGB(P,T,H)local d,x,M=P:ToRGB(T)local w,F,R=P:ToRGB(H)return I(i(d+w,0,255),i(x+F,0,255),i(M+R,0,255))end function u.ConvertNumberRange(M,T,H,P,d,x)return((T-H)*(x-d))/(P-H)+d end function u.UDim2ToVector2(P,T,H)local d,x d=T.X.Offset+P:ConvertNumberRange(T.X.Scale,0,1,0,H.X)x=T.Y.Offset+P:ConvertNumberRange(T.Y.Scale,0,1,0,H.Y)return s(d,x)end function u.Vector2ToUDim2(P,T,H)local d,x d=P:ConvertNumberRange(T.X,0,H.X,0,1)x=P:ConvertNumberRange(T.Y,0,H.Y,0,1)return a(d,0,x,0)end function u.Lerp(d,T,H,P)return T+(H-T)*P end function u.Bezier(x,T,H,P,d)local M=x:Lerp(T,H,d)local w=x:Lerp(H,P,d)return x:Lerp(M,w,d)end function u.Tween(R,T,H,P,d,M,F)task.spawn(function()if R:HasProperty(T,H)then if e.tweens[T]then if e.tweens[T][H]then e.tweens[T][H]:Cancel()end end local f=T[H]local K=0 local v={Completed=e.signal.new()}e.tweens[T]=e.tweens[T]or{}e.tweens[T][H]=v v.Connection=R:Connection(x.RenderStepped,function(x)K=K+x/d if K>=1 or T==nil then v:Cancel()end pcall(function()local d=w:GetValue(K,F or Enum.EasingStyle.Linear,M or Enum.EasingDirection.In)local x if typeof(f)=="number"then x=u:Lerp(f,P,d)else x=f:Lerp(P,d)end T[H]=x end)end)function v.Cancel(P)v.Connection:Disconnect()v.Completed:Fire()table.clear(v)e.tweens[T][H]=nil end return v else print("unable to tween: invalid property "..(tostring(H)..(" for object "..tostring(T))),255,0,0)end end)end function u.DetectTableChange(P,T,H)if T==nil then warn("DetectTableChange: Argument #1 (indexcallback) is nil, function may not work as expected.")elseif H==nil then warn("DetectTableChange: Argument #2 (newindexcallback) is nil, function may not work as expected.")end local d=newproxy(true)local x=getmetatable(d)x.__index=T x.__newindex=H return d end function u.MouseOver(H,T)local P=M:GetMouseLocation()local d=T.Position.X local x=T.Position.Y local w=d+T.Size.X local F=x+T.Size.Y return P.X>=d and(P.Y>=x and(P.X<=w and P.Y<=F))end function u.GetHoverObject(T)local H={}for P,d in t,e.drawings do if d.Object.Visible and(d.Class=="Square"and T:MouseOver(d.Object))then table.insert(H,d.Object)end end table.sort(H,function(T,H)return T.ZIndex>H.ZIndex end)return H[1]end function u.Draw(P,T,H)local d={"Object","Children","Class"}local x={Object=Drawing.new(T),Children={};ThemeColor="",OutlineThemeColor="";ThemeColorOffset=0;OutlineThemeColorOffset=0;Parent=nil,Size=a(0,0,0,0),Position=a(0,0,0,0);AbsoluteSize=s(0,0);AbsolutePosition=s(0,0),Hover=false;Visible=true,MouseButton1Down=e.signal.new();MouseButton2Down=e.signal.new();MouseButton1Up=e.signal.new();MouseButton2Up=e.signal.new();MouseEnter=e.signal.new();MouseLeave=e.signal.new();Class=T}function x.Update(T)local H=x.Parent~=nil and e.drawings[x.Parent.Object]or nil local P,d,M=workspace.CurrentCamera.ViewportSize,Vector2.new(0,0),true if H~=nil then P=(H.Class=="Square"or H.Class=="Image")and H.Object.Size or H.Class=="Text"and H.TextBounds or workspace.CurrentCamera.ViewportSize d=H.Object.Position M=H.Object.Visible end if x.Class=="Square"or x.Class=="Image"then x.Object.Size=typeof(x.Size)=="Vector2"and x.Size or typeof(x.Size)=="UDim2"and u:UDim2ToVector2(x.Size,P)end if x.Class=="Square"or x.Class=="Image"or x.Class=="Circle"or x.Class=="Text"then x.Object.Position=d+(typeof(x.Position)=="Vector2"and x.Position or u:UDim2ToVector2(x.Position,P))end x.Object.Visible=(M and x.Visible)and true or false x:UpdateChildren()end function x.UpdateChildren(T)for T,H in t,x.Children do H:Update()end end function x.GetDescendants(T)local H={}local function P(T)for T,d in t,T.Children do table.insert(H,d)P(d)end end P(T)return H end e.drawings[x.Object]=x local M=u:DetectTableChange(function(T,H)return x[H]==nil and x.Object[H]or x[H]end,function(H,P,M)if not table.find(d,P)then local H=x[P]if P=="Size"and(T=="Square"or T=="Image")then x.Object.Size=u:UDim2ToVector2(M,x.Parent==nil and workspace.CurrentCamera.ViewportSize or x.Parent.Object.Size)x.AbsoluteSize=x.Object.Size elseif P=="Position"and(T=="Square"or T=="Image"or T=="Text")then x.Object.Position=u:UDim2ToVector2(M,x.Parent==nil and s(0,0)or x.Parent.Object.Position)x.AbsolutePosition=x.Object.Position elseif P=="Parent"then if x.Parent~=nil then x.Parent.Children[x]=nil end if M~=nil then table.insert(M.Children,x)end elseif P=="Visible"then x.Visible=M elseif P=="Font"and(M==2 and U=="ScriptWare")then M=1 end pcall(function()x.Object[P]=M end)if x[P]~=nil or P=="Parent"then x[P]=M end if table.find({"Size","Position";"Position","Visible","Parent"},P)then x:Update()end if table.find({"ThemeColor","OutlineThemeColor","ThemeColorOffset","OutlineThemeColorOffset"},P)and H~=M then e.UpdateThemeColors()end end end)function x.Remove(T)for T,H in t,T.Children do H:Remove()end if x.Parent then x.Parent.Children[x.Object]=nil end e.drawings[x.Object]=nil x.Object:Remove()table.clear(x)end H=typeof(H)=="table"and H or{}if T=="Square"and H.Filled==nil then H.Filled=true end if H.Visible==nil then H.Visible=true end for T,H in t,H do M[T]=H end x:Update()return M end end e.utility=u function e.Unload(T)e.unloaded:Fire()for T,H in t,T.connections do H:Disconnect()end for T in t,T.drawings do T:Remove()end table.clear(T.drawings);(getgenv()).library=nil end function e.init(T)if T.hasInit then return end local H={}makefolder(T.cheatname)makefolder(T.cheatname.."/assets")makefolder(T.cheatname..("/"..T.gamename))makefolder(T.cheatname..("/"..(T.gamename.."/configs")))makefolder(T.cheatname..("/"..(T.gamename.."/scripts")))makefolder(T.cheatname..("/"..(T.gamename.."/autoexec")))if not isfile(T.cheatname.."_friendlist.txt")then writefile(T.cheatname.."_friendlist.txt",d:JSONEncode({}))end if not isfile(T.cheatname.."_enemylist.txt")then writefile(T.cheatname.."_enemylist.txt",d:JSONEncode({}))end function T.SetTheme(H,T)for T,P in t,T do H.theme[T]=P end H.UpdateThemeColors()end function T.GetConfig(H,T)if isfile(H.cheatname..("/"..(H.gamename..("/configs/"..(T..H.fileext)))))then return readfile(H.cheatname..("/"..(H.gamename..("/configs/"..(T..H.fileext)))))end end function T.LoadConfig(H,T)local P=H:GetConfig(T)if not P then H:SendNotification("Error loading config: Config does not exist. ("..(tostring(T)..")"),5,o(1,0,0))return end P=d:JSONDecode(P)local x,M=pcall(function()for T,d in t,H.options do local x,M=pcall(function()local H=P[T]if H==nil then H=d.default end if d.class=="toggle"then d:SetState(H or false)elseif d.class=="slider"then d:SetValue(H or 0)elseif d.class=="bind"then d:SetBind(u:HasProperty(Enum.KeyCode,H)and Enum.KeyCode[H]or u:HasProperty(Enum.UserInputType,H)and Enum.UserInputType[H]or H or"none")elseif d.class=="color"then if H==nil then H={1;1;1;0}end if H==d.default then local T,P=d.default,d.defaulttrans or 0 H={T.R,T.G,T.B,P}end if T=="theme_accent"then e.theme.Accent=o(0,0,0)e:SetTheme(e.theme)end d:SetColor(o(H[1],H[2],H[3]))d:SetTrans(H[4])elseif d.class=="list"then d:Select(H or d.multi and""or d.values[1]or"")end end)if not x then H:SendNotification("Error loading config flag ["..(tostring(T)..("]: "..M)))end end end)if x then H:SendNotification("Successfully loaded config: "..T,5,o(0,1,0))else H:SendNotification("Error loading config: "..(tostring(M)..(". ("..(tostring(T)..")"))),5,o(1,0,0))end end function T.SaveConfig(H,T)if not H:GetConfig(T)then H:SendNotification("Error saving config: Config does not exist. ("..(tostring(T)..")"),5,o(1,0,0))return end local P,x=pcall(function()local P={}for T,H in t,H.options do if H.class=="toggle"then P[T]=H.state elseif H.class=="slider"then P[T]=H.value elseif H.class=="bind"then P[T]=H.bind.Name elseif H.class=="color"then P[T]={H.color.r;H.color.g;H.color.b;H.trans}elseif H.class=="list"then P[T]=H.selected end end writefile(H.cheatname..("/"..(H.gamename..("/configs/"..(T..H.fileext)))),d:JSONEncode(P))end)if P then H:SendNotification("Successfully saved config: "..T,5,o(0,1,0))else H:SendNotification("Error saving config: "..(tostring(x)..(". ("..(tostring(T)..")"))),5,o(1,0,0))end end T.cursor1=u:Draw("Triangle",{Filled=true;Color=I(255,255,255),ZIndex=T.zindexOrder.cursor})T.cursor2=u:Draw("Triangle",{Filled=true,Color=I(85,85,85);T.zindexOrder.cursor-1})local function P()T.cursor1.Visible=T.open T.cursor2.Visible=T.open if T.cursor1.Visible then local H=M:GetMouseLocation()T.cursor1.PointA=H T.cursor1.PointB=H+s(16,5)T.cursor1.PointC=H+s(5,16)T.cursor2.PointA=T.cursor1.PointA+s(0,0)T.cursor2.PointB=T.cursor1.PointB+s(1,1)T.cursor2.PointC=T.cursor1.PointC+s(1,1)end end local w w=hookmetamethod(game,"__namecall",function(T,...)if getnamecallmethod()=="Destroy"and e.instances[T]~=nil then e.instances[T]=nil end return w(T,...)end)u:Connection(M.InputBegan,function(H,P)if T.hasInit then local P=u:GetHoverObject()local d=e.drawings[P]if H.KeyCode==T.toggleKey and not e.opening then T:SetOpen(not T.open)task.spawn(function()e.opening=true task.wait(.15)e.opening=false end)elseif H.UserInputType==Enum.UserInputType.MouseButton1 then V=true W:Fire()if P and d then d.MouseButton1Down:Fire(M:GetMouseLocation())end if e.draggingSlider~=nil then local T=M:GetMouseLocation()-e.draggingSlider.objects.background.Object.Position local H=u:ConvertNumberRange(T.X,0,e.draggingSlider.objects.background.Object.Size.X,e.draggingSlider.min,e.draggingSlider.max)e.draggingSlider:SetValue(H)end elseif H.UserInputType==Enum.UserInputType.MouseButton2 then if P and d then d.MouseButton2Down:Fire(M:GetMouseLocation())end end end end)u:Connection(M.InputEnded,function(H,P)if T.hasInit then local T=u:GetHoverObject()local P=e.drawings[T]if H.UserInputType==Enum.UserInputType.MouseButton1 then V=false n:Fire()if T and P then P.MouseButton1Up:Fire(M:GetMouseLocation())end elseif H.UserInputType==Enum.UserInputType.MouseButton2 then if T and P then P.MouseButton2Up:Fire(M:GetMouseLocation())end end end end)u:Connection(M.InputChanged,function(T,d)if T.UserInputType==Enum.UserInputType.MouseMovement then q:Fire(M:GetMouseLocation())P()if e.CurrentTooltip~=nil then local T=M:GetMouseLocation()H.background.Position=UDim2.new(0,T.X+15,0,T.Y+15)H.background.Size=UDim2.new(0,(H.text.TextBounds.X+6)+(e.CurrentTooltip.risky and 60 or 0),0,H.text.TextBounds.Y+2)end local T=u:GetHoverObject()for H,P in t,e.drawings do local d=T==P.Object if d and not P.Hover then P.Hover=true P.MouseEnter:Fire(M:GetMouseLocation())elseif not d and P.Hover then P.Hover=false P.MouseLeave:Fire(M:GetMouseLocation())end end if V then if e.draggingSlider~=nil then local T=M:GetMouseLocation()-e.draggingSlider.objects.background.Object.Position local H=u:ConvertNumberRange(T.X,0,e.draggingSlider.objects.background.Object.Size.X,e.draggingSlider.min,e.draggingSlider.max)e.draggingSlider:SetValue(H)end end end end)function T.SetOpen(d,T)d.open=T if T and e.flags.disablemenumovement then R:BindAction("FreezeMovement",function()return Enum.ContextActionResult.Sink end,false,unpack(Enum.PlayerActions:GetEnumItems()))else R:UnbindAction("FreezeMovement")end if not T and H.background.Visible then H.background.Visible=false end P()for H,P in t,d.windows do P:SetOpen(T)end end function T.UpdateThemeColors()for T,H in t,e.drawings do if H.ThemeColor and e.theme[H.ThemeColor]then H.Object.Color=u:AddRGB(e.theme[H.ThemeColor],I(H.ThemeColorOffset,H.ThemeColorOffset,H.ThemeColorOffset))end if H.ThemeColorOutline and e.theme[H.ThemeColorOutline]then H.Object.OutlineColor=u:AddRGB(e.theme[H.ThemeColorOutline],I(H.OutlineThemeColorOffset,H.OutlineThemeColorOffset,H.OutlineThemeColorOffset))end end end function T.SendNotification(d,T,H,P)H=H or 5 if typeof(T)~="string"then return error(string.format("invalid message type, got %s, expected string",typeof(T)))elseif typeof(H)~="number"then return error(string.format("invalid time type, got %s, expected number",typeof(H)))elseif P~=nil and typeof(P)~="Color3"then return error(string.format("invalid color type, got %s, expected color3",typeof(H)))end local x={}d.notifications[x]=true do local H=x local M=d.zindexOrder.notification x.holder=u:Draw("Square",{Position=a(0,0,0,75);Transparency=0})x.background=u:Draw("Square",{Size=a(1,0,1,0),Position=a(0,-500,0,0),Parent=x.holder;ThemeColor="Background",ZIndex=M})x.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border 2",Parent=x.background,ZIndex=M-1})H.border2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border 3";Parent=H.border1,ZIndex=M-2})x.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=d.images.gradientp90,Parent=x.background,Transparency=.5,ZIndex=M+1})x.accentBar=u:Draw("Square",{Size=a(0,5,1,4);Position=a(0,0,0,-2);Parent=x.background;ThemeColor=P==nil and"Accent"or"",ZIndex=M+5})x.text=u:Draw("Text",{Position=a(0,13,0,2),ThemeColor="Primary Text",Text=T,Outline=true;Font=2,Size=13,ZIndex=M+4;Parent=x.background})if P then x.accentBar.Color=P end end function x.Remove(T)T.holder:Remove()e.notifications[x]=nil e:UpdateNotifications()end task.spawn(function()d:UpdateNotifications()x.background.Size=a(0,x.text.TextBounds.X+20,0,19)task.wait()u:Tween(x.background,"Position",a(0,0,0,0),.1)task.wait(H)x:Remove()end)return x end function T.UpdateNotifications(T)local H=0 for T in t,T.notifications do u:Tween(T.holder,"Position",a(0,0,0,75+H*30),.15)H+=1 end end function T.NewIndicator(H)local P={title=H.title or"indicator";enabled=H.enabled or false;position=H.position or a(0,15,0,300),values={},objects={valueObjects={}};spacing="   "}table.insert(T.indicators,P)do local H=T.zindexOrder.indicator local d=P.objects d.background=u:Draw("Square",{Size=a(0,200,0,16);Position=P.position;ThemeColor="Background",ZIndex=H})d.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border 2";Parent=d.background;ZIndex=H-1})d.border2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border 3",Parent=d.border1;ZIndex=H-2})d.topborder=u:Draw("Square",{Size=a(1,0,0,1);ThemeColor="Accent";Parent=d.background,ZIndex=H+1})d.textlabel=u:Draw("Text",{Position=a(.5,0,0,1),ThemeColor="Primary Text";Text=P.title;Size=13,Font=2;ZIndex=H+2,Center=true,Outline=true,Parent=d.background})end function P.Update(T)local H=125 local P=0 table.sort(T.values,function(T,H)return T.order<H.order end)for T,d in t,T.values do d.objects.keyLabel.Text=tostring(d.key)d.objects.valueLabel.Text=tostring(d.value)d.objects.valueLabel.Position=a(1,-(d.objects.valueLabel.TextBounds.X+3),0,0)d.objects.background.Position=a(0,0,1,3+P)d.objects.background.Visible=d.enabled if d.enabled then P=(P+16)+3 local T=(d.objects.keyLabel.TextBounds.X+10)+d.objects.valueLabel.TextBounds.X if T>H then H=T end end end T.objects.background.Size=a(0,H+8,0,16)T.objects.background.Position=T.position end function P.AddValue(H,T)local d={key=T.key or"",value=T.value or"";order=T.order or#H.values+1,enabled=T.enabled==nil and true or T.enabled;objects={}}table.insert(H.values,d)do local T=e.zindexOrder.indicator local H=d.objects H.background=u:Draw("Square",{Size=a(1,0,0,16);ThemeColor="Background",ZIndex=T;Parent=P.objects.background})H.border1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Border 2";Parent=H.background;ZIndex=T-1})H.border2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border 3";Parent=H.border1,ZIndex=T-2})H.keyLabel=u:Draw("Text",{Position=a(0,3,0,1);ThemeColor="Option Text 2";Size=13,Font=2;ZIndex=T+2;Outline=true,Parent=H.background})H.valueLabel=u:Draw("Text",{Position=a(0,0,0,1);ThemeColor="Option Text 2";Size=13,Font=2;ZIndex=T+2;Outline=true,Parent=H.background})end function d.Remove(T)table.remove(P.values,table.find(P.values,d))T.objects.background:Remove()table.clear(T)P:Update()end function d.SetEnabled(H,T)if typeof(T)=="boolean"then H.enabled=T P:Update()end end function d.SetValue(H,T)if typeof(T)=="string"then H.value=T P:Update()end end function d.SetKey(H,T)if typeof(T)=="string"then H.key=T P:Update()end end H:Update()return d end function P.GetValue(H,T)if typeof(T)=="number"then return H.values[T]else for H,P in t,H.values do if P.key==T then return P end end end end function P.SetEnabled(H,T)if typeof(T)=="boolean"then H.enabled=T H.objects.background.Visible=T H:Update()end end function P.SetPosition(H,T)if typeof(T)=="UDim2"then H.position=T H.objects.background.Position=T end end for T,H in t,H.values or{}do P:AddValue({key=tostring(T),value=tostring(H)})end P:SetEnabled(P.enabled)return P end function T.NewWindow(T)local P={title=T.title or"",selectedTab=nil,tabs={},objects={},colorpicker={objects={};color=o(1,0,0);trans=0},dropdown={objects={values={}},max=5}}table.insert(e.windows,P)do local H=T.size or a(0,525,0,650)local d=T.position or a(0,250,0,150)local x=P.objects local M=e.zindexOrder.window x.background=u:Draw("Square",{Size=H,Position=d;ThemeColor="Background",ZIndex=M})x.innerBorder1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Border 3",ZIndex=M-1,Parent=x.background})x.innerBorder2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Border 1",ZIndex=M-2;Parent=x.innerBorder1})x.midBorder=u:Draw("Square",{Size=a(1,10,1,25);Position=a(0,-5,0,-20),ThemeColor="Border 2";ZIndex=M-3,Parent=x.innerBorder2})x.outerBorder1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Border 1",ZIndex=M-4;Parent=x.midBorder})x.outerBorder2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border 3";ZIndex=M-5;Parent=x.outerBorder1})x.topBorder=u:Draw("Square",{Size=a(1,0,0,1),ThemeColor="Accent";ZIndex=M+1,Parent=x.background})x.title=u:Draw("Text",{Position=a(0,7,0,2),ThemeColor="Primary Text",Text=P.title,Font=2;Size=13,ZIndex=M+1,Outline=true,Parent=x.midBorder})x.groupBackground=u:Draw("Square",{Size=a(1,-16,1,-39);Position=a(0,8,0,31),ThemeColor="Group Background";ZIndex=M+5;Parent=x.background})x.groupInnerBorder=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Border 1",ZIndex=M+4,Parent=x.groupBackground})x.groupOuterBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border 3",ZIndex=M+3;Parent=x.groupInnerBorder})x.tabHolder=u:Draw("Square",{Size=a(1,0,0,20);Position=a(0,0,0,-21),Parent=x.groupBackground;Transparency=0;ZIndex=M+1})x.columnholder1=u:Draw("Square",{Size=a(.48,0,.96,0),Position=a(.01,0,.02,0);Transparency=0;ZIndex=M+6,Parent=x.groupBackground})x.columnholder2=u:Draw("Square",{Size=a(.48,0,.96,0),Position=a(.51,0,.02,0);Transparency=0;ZIndex=M+6,Parent=x.groupBackground})x.dragdetector=u:Draw("Square",{Size=a(1,0,1,0);Parent=x.midBorder;Transparency=0;ZIndex=M+2})local w,F,R u:Connection(x.dragdetector.MouseButton1Down,function(T)w=true F=a(0,T.X,0,T.Y)R=x.background.Position end)u:Connection(n,function()w=false end)u:Connection(q,function(T)if w then if P.open then x.background.Position=(R+a(0,T.X,0,T.Y))-F else w=false end end end)end do do local T=P.colorpicker.objects local H=e.zindexOrder.colorpicker T.background=u:Draw("Square",{Visible=false,Size=a(0,200,0,242);Position=a(1,-200,1,10);ThemeColor="Background";ZIndex=H,Parent=P.objects.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border",ZIndex=H-1,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Border 1";ZIndex=H-2;Parent=T.border1})T.border3=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border",ZIndex=H-3;Parent=T.border2})T.statusText=u:Draw("Text",{Position=a(0,5,0,4),Text="colorpicker_status_text";ThemeColor="Option Text 1";Size=13;Font=2;Outline=true;ZIndex=H+1,Parent=T.background})T.mainColor=u:Draw("Square",{Size=a(0,175,0,175),Position=a(0,5,0,25),Color=o(1,0,0);ZIndex=H+2,Parent=T.background})T.sat2=u:Draw("Image",{Size=a(1,0,1,0),Data=e.images.colorsat2,ZIndex=H+4;Parent=T.mainColor})T.colorBorder=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Border",ZIndex=H+1,Parent=T.mainColor})T.mainDetector=u:Draw("Square",{Size=a(1,0,1,0);Transparency=0;ZIndex=H+10,Parent=T.mainColor})T.hue=u:Draw("Image",{Size=a(0,175,0,10),Position=a(0,5,0,205);Data=e.images.colorhue;ZIndex=H+2,Parent=T.background})T.hueBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border",ZIndex=H+1;Parent=T.hue})T.hueDetector=u:Draw("Square",{Size=a(1,0,1,0);Transparency=0;ZIndex=H+10;Parent=T.hue})T.transColor=u:Draw("Square",{Size=a(0,10,0,175);Position=a(0,185,0,25);Color=o(1,0,0),ZIndex=H+2,Parent=T.background})T.trans=u:Draw("Image",{Size=a(1,0,1,0),Data=e.images.colortrans,ZIndex=H+3;Parent=T.transColor})T.transBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border",ZIndex=H+1,Parent=T.transColor})T.transDetector=u:Draw("Square",{Size=a(1,0,1,0),Transparency=0,ZIndex=H+10,Parent=T.transColor})T.pointer=u:Draw("Square",{Size=a(0,2,0,2);Position=a(0,0,0,0);Color=o(1,1,1),ZIndex=H+6;Parent=T.mainColor})T.pointerBorder=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);Color=o(0,0,0);ZIndex=H+5;Parent=T.pointer})T.hueSlider=u:Draw("Square",{Size=a(0,1,1,0);Color=o(1,1,1),ZIndex=H+4;Parent=T.hue})T.hueSliderBorder=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),Color=o(0,0,0),ZIndex=H+3,Parent=T.hueSlider})T.transSlider=u:Draw("Square",{Size=a(1,0,0,1),Color=o(1,1,1),ZIndex=H+5,Parent=T.trans})T.transSliderBorder=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),Color=o(0,0,0);ZIndex=H+4;Parent=T.transSlider})T.rBackground=u:Draw("Square",{Size=a(0,60,0,15),Position=a(0,5,1,-20);ThemeColor="Option Background";Parent=T.background;ZIndex=H+5})T.rBorder=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);Color=o(0,0,0);ZIndex=H+4,Parent=T.rBackground})T.rText=u:Draw("Text",{Position=a(.5,0,0,0),Color=o(1,.1,.1);Text="R",Size=13;Font=2;Outline=true,Center=true,ZIndex=H+6;Parent=T.rBackground})T.gBackground=u:Draw("Square",{Size=a(0,60,0,15),Position=a(0,70,1,-20),ThemeColor="Option Background",Parent=T.background,ZIndex=H+5})T.gBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);Color=o(0,0,0);ZIndex=H+4;Parent=T.gBackground})T.gText=u:Draw("Text",{Position=a(.5,0,0,0),Color=o(.1,1,.1),Text="G",Size=13;Font=2,Outline=true,Center=true;ZIndex=H+6;Parent=T.gBackground})T.bBackground=u:Draw("Square",{Size=a(0,60,0,15),Position=a(0,135,1,-20),ThemeColor="Option Background",Parent=T.background;ZIndex=H+5})T.bBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),Color=o(0,0,0),ZIndex=H+4,Parent=T.bBackground})T.bText=u:Draw("Text",{Position=a(.5,0,0,0);Color=o(.1,.1,1),Text="B";Size=13;Font=2;Outline=true;Center=true;ZIndex=H+6;Parent=T.bBackground})local d,x,M=false,false,false local function w(H)if P.colorpicker.selected~=nil then local d,x,M=P.colorpicker.selected.color:ToHSV()X=(T.mainColor.Object.Position.X+T.mainColor.Object.Size.X)-T.mainColor.Object.Position.X Y=(T.mainColor.Object.Position.Y+T.mainColor.Object.Size.Y)-T.mainColor.Object.Position.Y X=math.clamp((H.X-T.mainColor.Object.Position.X)/X,0,.995)Y=math.clamp((H.Y-T.mainColor.Object.Position.Y)/Y,0,.995)x,M=1-X,1-Y P.colorpicker.selected:SetColor(k(d,x,M))P.colorpicker:Visualize(k(d,x,M),P.colorpicker.selected.trans)end end local function F(H)if P.colorpicker.selected~=nil then local d,x,M=P.colorpicker.selected.color:ToHSV()X=(T.hue.Object.Position.X+T.hue.Object.Size.X)-T.hue.Object.Position.X X=math.clamp((H.X-T.hue.Object.Position.X)/X,0,.995)d=1-X P.colorpicker.selected:SetColor(k(d,x,M))P.colorpicker:Visualize(k(d,x,M),P.colorpicker.selected.trans)end end local function R(H)if P.colorpicker.selected~=nil then Y=(T.trans.Object.Position.Y+T.trans.Object.Size.Y)-T.trans.Object.Position.Y Y=math.clamp((H.Y-T.transColor.Object.Position.Y)/Y,0,.995)P.colorpicker.selected:SetTrans(Y)P.colorpicker:Visualize(P.colorpicker.selected.color,Y)end end u:Connection(T.mainDetector.MouseButton1Down,function(T)x=true w(T)end)u:Connection(T.hueDetector.MouseButton1Down,function(T)d=true F(T)end)u:Connection(T.transDetector.MouseButton1Down,function(T)M=true R(T)end)u:Connection(q,function(T)if x then w(T)elseif d then F(T)elseif M then R(T)end end)u:Connection(n,function()x=false d=false M=false end)end function P.colorpicker.Visualize(P,T,H)if typeof(T)~="Color3"then return end if typeof(H)~="number"then return end local d,x,M=T:ToHSV()local w,F,R=u:ToRGB(T)d=d==0 and 1 or d P.color=T P.trans=H P.objects.mainColor.Color=k(d,1,1)P.objects.transColor.Color=k(d,x,M)P.objects.hueSlider.Position=a(1-d,0,0,0)P.objects.transSlider.Position=a(0,0,H,0)P.objects.pointer.Position=a(1-x,0,1-M,0)P.objects.statusText.Text="Editing : Unknown"P.objects.rText.Text=string.format("%.14g",K(w))P.objects.gText.Text=string.format("%.14g",K(F))P.objects.bText.Text=string.format("%.14g",K(R))if P.selected~=nil then local T="Editing : Unknown"if P.selected.text~=nil and P.selected.text~=""then T=tostring(P.selected.text)elseif P.selected.flag~=nil and P.selected.flag~=""then T=tostring(P.selected.flag)end P.objects.statusText.Text=tostring(T)end end P.colorpicker:Visualize(P.colorpicker.color,P.colorpicker.trans)end do do local T=P.dropdown.objects local H=e.zindexOrder.dropdown T.background=u:Draw("Square",{Visible=false;Size=a(1,-3,0,50);Position=a(0,3,1,0),ThemeColor="Background",ZIndex=H;Parent=P.objects.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border";ZIndex=H-1,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Border 1";ZIndex=H-2;Parent=T.border1})T.border3=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Border";ZIndex=H-3,Parent=T.border2})end function P.dropdown.Refresh(T)if T.selected~=nil then local H=T.selected for H,d in t,H.values do local x=T.objects.values[H]if x==nil then x={}x.background=u:Draw("Square",{Size=a(1,-4,0,18),Color=Color3.new(.25,.25,.25);Transparency=0;ZIndex=e.zindexOrder.dropdown+1;Parent=T.objects.background})x.text=u:Draw("Text",{Position=a(0,3,0,1),ThemeColor="Option Text 2",Text=tostring(d),Size=13;Font=2;ZIndex=e.zindexOrder.dropdown+2;Parent=x.background})x.connection=u:Connection(x.background.MouseButton1Down,function()local d=T.selected if d then local x=d.values[H]local M=d.selected local w=d.multi and{}or x if d.multi then for T,H in t,M do if H=="none"then continue end w[T]=H end if table.find(w,x)then table.remove(w,table.find(w,x))else table.insert(w,x)end end d:Select(w)if not d.multi then d.open=false d.objects.openText.Text="+"P.dropdown.selected=nil P.dropdown.objects.background.Visible=false end for H,P in t,d.values do local d=T.objects.values[H]if d then d.background.Transparency=(typeof(w)=="table"and table.find(w,P)or w==P)and 1 or 0 end end end end)T.objects.values[H]=x end end for P,d in t,H.values do local x=T.objects.values[P]if x then x.background.Transparency=(typeof(H.selected)=="table"and table.find(H.selected,d)or H.selected==d)and 1 or 0 end end local d,x=2,2 for T,P in t,T.objects.values do local M=H.values[T]P.background.Visible=M~=nil if M~=nil then P.background.Position=a(0,2,0,d)P.text.Text=M d=(d+P.background.Object.Size.Y)+x end end T.objects.background.Size=a(1,-6,0,d)end end P.dropdown:Refresh()end local function d(T)u:Connection(T.objects.holder.MouseEnter,function()H.background.Visible=not(T.tooltip==""or T.tooltip==nil)and true or false H.riskytext.Visible=T.risky H.text.Position=T.risky and a(0,60,0,0)or a(0,3,0,0)H.text.Text=tostring(T.tooltip)e.CurrentTooltip=T end)u:Connection(T.objects.holder.MouseLeave,function()if e.CurrentTooltip==T then e.CurrentTooltip=nil H.background.Visible=false end end)end local w={}function P.SetOpen(H,T)if typeof(T)=="boolean"then H.open=T local P=H.objects.background:GetDescendants()table.insert(P,H.objects.background)task.spawn(function()if not T then task.wait(.1)end H.objects.background.Visible=T end)for H,P in t,P do if P.Object.Transparency~=0 then task.spawn(function()if T then u:Tween(P.Object,"Transparency",w[P]or 1,.1)else w[P]=P.Object.Transparency u:Tween(P.Object,"Transparency",.05,.1)end end)end end end end function P.AddTab(w,T,H)local F={text=T;order=H or#w.tabs+1;callback=function() end,objects={};sections={}}table.insert(w.tabs,F)do local H=F.objects local P=e.zindexOrder.window+5 H.background=u:Draw("Square",{Size=a(0,50,1,0),Parent=w.objects.tabHolder,ThemeColor="Unselected Tab Background";ZIndex=P})H.innerBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Border 1";ZIndex=P-1,Parent=H.background})H.outerBorder=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border 3",ZIndex=P-2;Parent=H.innerBorder})H.topBorder=u:Draw("Square",{Size=a(1,0,0,1),ThemeColor="Unselected Tab Background",ZIndex=P+1;Parent=H.background})H.text=u:Draw("Text",{ThemeColor="Unselected Tab Text";Text=T;Size=13;Font=2,ZIndex=P+1,Outline=true;Center=true,Parent=H.background})u:Connection(H.background.MouseButton1Down,function()F:Select()end)end function F.AddSection(f,T,H,w)local v={text=tostring(T);side=H==nil and 1 or i(H,1,2);order=w or#f.sections+1,enabled=true;objects={},options={}}table.insert(f.sections,v)do local T=v.objects local H=e.zindexOrder.window+15 T.background=u:Draw("Square",{ThemeColor="Section Background",ZIndex=H;Parent=P.objects["columnholder"..v.side]})T.innerBorder=u:Draw("Square",{Size=a(1,2,1,1);Position=a(0,-1,0,0);ThemeColor="Border 3";ZIndex=H-1;Parent=T.background})T.outerBorder=u:Draw("Square",{Size=a(1,2,1,1);Position=a(0,-1,0,0);ThemeColor="Border 1",ZIndex=H-2;Parent=T.innerBorder})T.topBorder1=u:Draw("Square",{Size=a(.025,1,0,1),Position=a(0,-1,0,0);ThemeColor="Accent";ZIndex=H+1,Parent=T.background})T.topBorder2=u:Draw("Square",{ThemeColor="Accent",ZIndex=H+1;Parent=T.background})T.textlabel=u:Draw("Text",{Position=a(.0425,0,0,-7);ThemeColor="Primary Text";Size=13,Font=2;ZIndex=H+1;Parent=T.background})T.optionholder=u:Draw("Square",{Size=a(.97,0,1,-15);Position=a(.015,0,0,13);Transparency=0,ZIndex=H+1;Parent=T.background})end function v.SetText(H,T)H.text=tostring(T)H.objects.textlabel.Text=H.text local P=(H.objects.background.Object.Size.X-H.objects.textlabel.TextBounds.X)-13 H.objects.topBorder2.Size=a(0,P,0,1)H.objects.topBorder2.Position=a(1,1+-P,0,0)end function v.UpdateOptions(T)table.sort(T.options,function(T,H)return T.order<H.order end)local H,P=15,0 for T,d in t,T.options do d.objects.holder.Visible=d.enabled if d.enabled then d.objects.holder.Position=a(0,0,0,H-15)H+=d.objects.holder.Object.Size.Y+P end end T.objects.background.Size=a(1,0,0,H)end function v.SetEnabled(H,T)if typeof(T)=="boolean"then v.enabled=T F:UpdateSections()end end function v.AddToggle(H,T)local w={class="toggle",flag=T.flag,text="",tooltip="";order=#H.options+1,state=false;risky=false,callonload=false;callback=function() end;enabled=true;options={};objects={}}local F={"objects"}for T,H in t,T do if not table.find(F,T)then w[T]=H end end table.insert(H.options,w)if w.flag then e.flags[w.flag]=w.state e.options[w.flag]=w end do local T=w.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,17),Transparency=0;ZIndex=H+5;Parent=v.objects.optionholder})T.background=u:Draw("Square",{Size=a(0,8,0,8);Position=a(0,2,0,4);ThemeColor="Option Background";ZIndex=H+3;Parent=T.holder})T.gradient=u:Draw("Image",{Size=a(1,0,1,0),Data=e.images.gradientp45;Transparency=.25;ZIndex=H+4,Parent=T.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 1",ZIndex=H+2;Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Option Border 2",ZIndex=H+1,Parent=T.border1})T.text=u:Draw("Text",{Position=a(0,19,0,1);ThemeColor="Option Text 3",Size=13;Font=2,ZIndex=H+1,Outline=true;Parent=T.holder})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor=w.state and"Accent"or"Option Border 1"end)u:Connection(T.holder.MouseButton1Down,function()w:SetState(not w.state)end)end function w.SetState(P,T,H)if typeof(T)=="boolean"then P.state=T if P.flag then e.flags[P.flag]=T end P.objects.border1.ThemeColor=T and"Accent"or P.objects.holder.Hover and"Accent"or"Option Border 1"P.objects.text.ThemeColor=T and(P.risky and"Risky Text Enabled"or"Option Text 1")or P.risky and"Risky Text"or"Option Text 3"P.objects.background.ThemeColor=T and"Accent"or"Option Background"P.objects.background.ThemeColorOffset=T and-55 or 0 if not H then P.callback(T)end end end function w.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T end end function w.UpdateOptions(T)table.sort(T.options,function(T,H)return T.order<H.order end)local H,P=0,0 for T,d in t,T.options do d.objects.holder.Visible=d.enabled if d.enabled then if d.class=="color"or d.class=="bind"then d.objects.holder.Position=a(1,-d.objects.holder.Object.Size.X-H,0,0)H=H+d.objects.holder.Object.Size.X elseif d.class=="slider"or d.class=="list"then d.objects.holder.Position=a(0,0,1,-d.objects.holder.Object.Size.Y-P)P=P+d.objects.holder.Object.Size.Y end end end T.objects.holder.Size=a(1,0,0,17+P)v:UpdateOptions()end function w.AddColor(H,T)local x={class="color";flag=T.flag;text="",tooltip="";order=#H.options+1,callback=function() end;color=Color3.new(1,.995,.995);trans=0;open=false;enabled=true,objects={}}local M={"objects"}for T,H in t,T do if not table.find(M,T)then x[T]=H end end table.insert(H.options,x)if x.flag then e.flags[x.flag]=x.color e.options[x.flag]=x end do local T=x.objects local P=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(0,21,0,17),Transparency=0;ZIndex=P+6;Parent=H.objects.holder})T.background=u:Draw("Square",{Size=a(0,15,0,8);Position=a(0,4,0,5),ZIndex=P+3,Parent=T.holder})T.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=e.images.gradientp45;Transparency=.25;ZIndex=P+4;Parent=T.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Option Border 1",ZIndex=P+2,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 2";ZIndex=P+1;Parent=T.border1})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor=x.state and"Accent"or"Option Border 1"end)u:Connection(T.holder.MouseButton1Down,function()x:SetOpen(not x.open)end)end function x.SetColor(d,T,H)if typeof(T)=="Color3"then local x,M,w=T:ToHSV()T=k(x,i(M,.005,.995),i(w,.005,.995))d.color=T d.objects.background.Color=T if not H then d.callback(T,d.trans)end if d.open then P.colorpicker:Visualize(d.color,d.trans)end if d.flag then e.flags[d.flag]=T end end end function x.SetTrans(d,T,H)if typeof(T)=="number"then d.trans=T if not H then d.callback(d.color,T)end if d.open then P.colorpicker:Visualize(d.color,d.trans)end end end function x.SetOpen(H,T)if typeof(T)=="boolean"then H.open=T if T then if P.colorpicker.selected then P.colorpicker.selected.open=false end P.colorpicker.selected=x P.colorpicker.objects.background.Parent=H.objects.background P.colorpicker.objects.background.Visible=true P.colorpicker:Visualize(x.color,x.trans)elseif P.colorpicker.selected==x then P.colorpicker.selected=nil P.colorpicker.objects.background.Parent=P.objects.background P.colorpicker.objects.background.Visible=false end end end d(x)x:SetColor(x.color,true)x:SetTrans(x.trans,true)H:UpdateOptions()return x end function w.AddBind(H,T)local P={class="bind",flag=T.flag;text="",tooltip="",bind="none";mode="toggle",order=#H.options+1;callback=function() end;keycallback=function() end;indicatorValue=e.keyIndicator:AddValue({value="value",key="key",enabled=false});noindicator=false;invertindicator=false,state=false;nomouse=false;enabled=true;binding=false;objects={}}local F={"objects"}for T,H in t,T do if not table.find(F,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.options[P.flag]=P end do local T=P.objects local d=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(0,0,0,17),Transparency=0,ZIndex=d+6;Parent=H.objects.holder})T.keyText=u:Draw("Text",{ThemeColor="Option Text 3",Size=13,Font=2;ZIndex=d+1;Parent=T.holder})u:Connection(T.holder.MouseEnter,function()T.keyText.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.keyText.ThemeColor=P.binding and"Accent"or"Option Text 3"end)u:Connection(T.holder.MouseButton1Down,function()if not P.binding then P:SetKeyText("...")P.binding=true end end)end local R function P.SetBind(H,T)if R then R:Disconnect()if P.flag then e.flags[P.flag]=false end P.callback(false)end local d="NONE"H.bind=T and T or T or H.bind if H.bind==Enum.KeyCode.Backspace then H.bind="none"else d=Z[T]or T.Name or T end H.keycallback(H.bind)H:SetKeyText(d:upper())H.indicatorValue:SetKey((H.text==nil or H.text=="")and(H.flag==nil and"unknown"or H.flag)or H.text)H.indicatorValue:SetValue("["..(d:upper().."]"))H.objects.keyText.ThemeColor=H.objects.holder.Hover and"Accent"or"Option Text 3"end function P.SetKeyText(H,T)T=tostring(T)H.objects.keyText.Text="["..(T.."]")H.objects.keyText.Position=a(0,2,0,2)H.objects.holder.Size=a(0,H.objects.keyText.TextBounds.X+2,0,17)w:UpdateOptions()end function P.Toggle(T)if P.mode=="toggle"then P.state=not P.state if P.flag then e.flags[P.flag]=P.state end P.callback(P.state)local T=P.state if P.invertindicator then T=not P.state end P.indicatorValue:SetEnabled(T and not P.noindicator)elseif P.mode=="hold"then if P.flag then e.flags[P.flag]=true end P.indicatorValue:SetEnabled((not P.invertindicator and true or false)and not P.noindicator)R=u:Connection(x.RenderStepped,function()if P.callback then P.callback(true)end end)end end function P.DisableHold(T)if R then R:Disconnect()if P.flag then e.flags[P.flag]=false end if P.callback then P.callback(false)end P.indicatorValue:SetEnabled(P.invertindicator and true or false)end end u:Connection(M.InputBegan,function(T)if M:GetFocusedTextBox()then return elseif P.binding then local H=(table.find({Enum.UserInputType.MouseButton1;Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3},T.UserInputType)and not P.nomouse)and T.UserInputType P:SetBind(H or not table.find(g,T.KeyCode)and T.KeyCode)P.binding=false elseif(T.KeyCode==P.bind or T.UserInputType==P.bind)and not P.binding then P:Toggle()end end)u:Connection(M.InputEnded,function(T)if P.bind~="none"then if T.KeyCode==P.bind or T.UserInputType==P.bind then P:DisableHold()end end end)d(P)P:SetBind(P.bind)H:UpdateOptions()return P end function w.AddSlider(H,T)local P={class="slider",flag=T.flag;suffix="";tooltip="",order=#H.options+1;value=0,min=0,max=100;increment=1,callback=function() end;enabled=true;dragging=false,focused=false,objects={}}local x={"objects";"dragging"}for T,H in t,T do if not table.find(x,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.flags[P.flag]=P.value e.options[P.flag]=P end do local T=P.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,20),Transparency=0;ZIndex=H+6,Parent=w.objects.holder})T.background=u:Draw("Square",{Size=a(1,-4,1,-8),Position=a(0,2,0,4);ThemeColor="Option Background";ZIndex=H+2;Parent=T.holder})T.slider=u:Draw("Square",{Size=a(0,0,1,0),ThemeColor="Accent";ZIndex=H+3,Parent=T.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Option Border 1",ZIndex=H+1,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Option Border 2",ZIndex=H;Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=e.images.gradientp90,Transparency=.65,ZIndex=H+4;Parent=T.background})T.text=u:Draw("Text",{Position=a(.5,0,0,-1),ThemeColor="Option Text 3";Size=13,Font=2,ZIndex=H+5;Outline=true,Center=true;Parent=T.background})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor=P.dragging and"Accent"or"Option Border 1"end)local d local x=""u:Connection(P.objects.holder.MouseButton1Down,function()if M:IsKeyDown(Enum.KeyCode.LeftControl)then if P.focused then P.focused=false d:Disconnect()else T.text.Text=tostring(P.value)..(tostring(P.suffix)..("/"..(tostring(P.max)..(tostring(P.suffix).." []"))))P.focused=true x=""d=u:Connection(M.InputBegan,function(H)if e.numberStrings[H.KeyCode.Name]then local d=e.numberStrings[H.KeyCode.Name]x=x..tostring(d)T.text.Text=string.format("%.14g",P.value)..(tostring(P.suffix)..("/"..(P.max..(tostring(P.suffix)..(" ["..(x.."]"))))))elseif H.KeyCode==Enum.KeyCode.Backspace then x=x:sub(1,-2)T.text.Text=string.format("%.14g",P.value)..(tostring(P.suffix)..("/"..(P.max..(tostring(P.suffix)..(" ["..(x.."]"))))))elseif H.KeyCode==Enum.KeyCode.Return then P:SetValue(tonumber(x))P.focused=false d:Disconnect()elseif H.KeyCode==Enum.KeyCode.Escape then P:SetValue(P.value,true)P.focused=false d:Disconnect()end end)end else P.dragging=true e.draggingSlider=P end end)u:Connection(n,function()T.border1.ThemeColor=T.holder.Hover and"Accent"or"Option Border 1"P.dragging=false e.draggingSlider=nil end)end function P.SetValue(P,T,H)if typeof(T)=="number"then local d=i(P.increment*K(T/P.increment),P.min,P.max)local x,M=P.objects.slider.Size,P.objects.slider.Position if P.min>=0 then x=a((d-P.min)/(P.max-P.min),0,1,0)else x=a(d/(P.max-P.min),0,1,0)M=a((0-P.min)/(P.max-P.min),0,0,0)end u:Tween(P.objects.slider,"Size",x,.05,Enum.EasingDirection.Out,Enum.EasingStyle.Quad)u:Tween(P.objects.slider,"Position",M,.05,Enum.EasingDirection.Out,Enum.EasingStyle.Quad)local w=(d==P.min and P.mintext~=nil)and P.mintext or(d==P.max and P.maxtext~=nil)and P.maxtext or string.format("%.14g",d)P.value=d e.flags[P.flag]=d P.objects.text.Text=w..(tostring(P.suffix)..("/"..(P.max..tostring(P.suffix))))P.objects.text.ThemeColor=(P.min<0 and d==0 or d==P.min)and(P.risky and"Risky Text"or"Option Text 3")or P.risky and"Risky Text Enabled"or"Option Text 1"if not H then P.callback(d)end end end d(P)P:SetValue(P.value,true)H:UpdateOptions()return P end function w.AddList(H,T)local x={class="list",flag=T.flag,text="";selected="";tooltip="";order=#H.options+1;callback=function() end;enabled=true;multi=false,open=false,values={},objects={}}table.insert(H.options,x)local M={"objects"}for T,H in t,T do if not table.find(M,T)then x[T]=H end end if x.flag then e.flags[x.flag]=x.selected e.options[x.flag]=x end do local T=x.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,22),Transparency=0,ZIndex=H+6;Parent=w.objects.holder})T.background=u:Draw("Square",{Size=a(1,-4,1,-8),Position=a(0,2,0,4);ThemeColor="Option Background";ZIndex=H+2,Parent=T.holder})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Option Border 1";ZIndex=H+1;Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 2",ZIndex=H;Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0),Data=e.images.gradientp90;Transparency=.65;ZIndex=H+4;Parent=T.background})T.inputText=u:Draw("Text",{Position=a(0,4,0,0),ThemeColor="Option Text 2",Text="none",Size=13;Font=2,ZIndex=H+5,Outline=true;Parent=T.background})T.openText=u:Draw("Text",{Position=a(1,-10,0,0);ThemeColor="Option Text 3",Text="+",Size=13;Font=2,ZIndex=H+5,Outline=true;Parent=T.background})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor="Option Border 1"end)u:Connection(T.holder.MouseButton1Down,function()if x.open then x.open=false T.openText.Text="+"if P.dropdown.selected==x then P.dropdown.selected=nil P.dropdown.objects.background.Visible=false end else if P.dropdown.selected~=nil then P.dropdown.selected.open=false end x.open=true T.openText.Text="-"P.dropdown.selected=x P.dropdown.objects.background.Visible=true P.dropdown.objects.background.Parent=T.holder P.dropdown:Refresh()end end)end function x.Select(P,T,H)T=typeof(T)=="table"and(P.multi==true and T or#T==0 and nil or T[1])or P.multi==true and{T}or T if T~=nil then P.selected=T local d=typeof(T)=="table"and(#T==0 and"none"or table.concat(T,", "))or tostring(T)local x=P.objects.inputText x.Text=d if x.TextBounds.X>P.objects.background.Object.Size.X-10 then local T=d:split("")for H=1,#T,1 do x.Text=table.concat(T,"",1,H)if x.TextBounds.X>P.objects.background.Object.Size.X-10 then x.Text=x.Text:sub(1,-6).."..."break end end end if P.flag then e.flags[P.flag]=P.selected end if not H then P.callback(P.selected)end end end function x.AddValue(H,T)table.insert(x.values,tostring(T))if P.dropdown.selected==x then P.dropdown:Refresh()end end function x.RemoveValue(H,T)if table.find(x.values,T)then table.remove(x.values,table.find(x.values,T))if P.dropdown.selected==x then P.dropdown:Refresh()end end end function x.ClearValues(T)table.clear(x.values)if P.dropdown.selected==x then P.dropdown:Refresh()end end d(x)x:Select(T.value or T.selected or x.multi and"none"or x.values[1],true)H:UpdateOptions()return x end if w.default~=nil then w.state=w.default end d(w)w:SetText(w.text)if w.callonload and typeof(w.callonload)=="boolean"then w:SetState(w.state,false)else w:SetState(w.state,true)end H:UpdateOptions()return w end function v.AddSlider(H,T)local P={class="slider",flag=T.flag,text="",tooltip="",suffix="";order=#H.options+1;value=0,min=0,max=100;increment=1,callback=function() end;enabled=true,dragging=false,focused=false,risky=false;objects={}}local x={"objects";"dragging"}for T,H in t,T do if not table.find(x,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.flags[P.flag]=P.value e.options[P.flag]=P end do local T=P.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,32),Transparency=0,ZIndex=H+4;Parent=v.objects.optionholder})T.background=u:Draw("Square",{Size=a(1,-4,0,11),Position=a(0,2,1,-14);ThemeColor="Option Background";ZIndex=H+2;Parent=T.holder})T.slider=u:Draw("Square",{Size=a(0,0,1,0),ThemeColor="Accent",ZIndex=H+3;Parent=T.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Option Border 1",ZIndex=H+1;Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 2",ZIndex=H;Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0),Data=e.images.gradientp90,Transparency=.65,ZIndex=H+4;Parent=T.background})T.text=u:Draw("Text",{Position=a(0,2,0,1);ThemeColor="Option Text 3";Size=13;Font=2,ZIndex=H+1;Outline=true;Parent=T.holder})T.plusDetector=u:Draw("Square",{Size=a(0,14,0,14),Position=a(1,-28,0,1);Transparency=0;ZIndex=H+5,Parent=T.holder})T.minusDetector=u:Draw("Square",{Size=a(0,14,0,14),Position=a(1,-14,0,1);Transparency=0,ZIndex=H+5,Parent=T.holder})T.plusText=u:Draw("Text",{Position=a(.5,0,0,-1);ThemeColor="Option Text 3",Text="+";Size=13,Font=2;ZIndex=H+4;Center=true;Outline=true,Parent=T.plusDetector})T.minusText=u:Draw("Text",{Position=a(.5,0,0,-1);ThemeColor="Option Text 3",Text="-",Size=13;Font=2;ZIndex=H+4,Center=true;Outline=true,Parent=T.minusDetector})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor=P.dragging and"Accent"or"Option Border 1"end)u:Connection(P.objects.plusDetector.MouseButton1Down,function()P:SetValue(P.value+(M:IsKeyDown(Enum.KeyCode.LeftShift)and 10 or P.increment))end)u:Connection(P.objects.minusDetector.MouseButton1Down,function()P:SetValue(P.value-(M:IsKeyDown(Enum.KeyCode.LeftShift)and 10 or P.increment))end)local d local x=""u:Connection(P.objects.holder.MouseButton1Down,function()if M:IsKeyDown(Enum.KeyCode.LeftControl)then if P.focused then P.focused=false d:Disconnect()else T.text.Text=P.text..(": "..(tostring(P.value)..(tostring(P.suffix).." []")))P.focused=true x=""d=u:Connection(M.InputBegan,function(H)if e.numberStrings[H.KeyCode.Name]then local d=e.numberStrings[H.KeyCode.Name]x=x..tostring(d)T.text.Text=P.text..(": "..(string.format("%.14g",P.value)..(tostring(P.suffix)..(" ["..(x.."]")))))elseif H.KeyCode==Enum.KeyCode.Backspace then x=x:sub(1,-2)T.text.Text=P.text..(": "..(string.format("%.14g",P.value)..(tostring(P.suffix)..(" ["..(x.."]")))))elseif H.KeyCode==Enum.KeyCode.Return then P:SetValue(tonumber(x))P.focused=false d:Disconnect()elseif H.KeyCode==Enum.KeyCode.Escape then P:SetValue(P.value,true)P.focused=false d:Disconnect()end end)end else P.dragging=true e.draggingSlider=P end end)u:Connection(n,function()T.border1.ThemeColor=T.holder.Hover and"Accent"or"Option Border 1"P.dragging=false e.draggingSlider=nil end)end function P.SetValue(d,T,H)if typeof(T)=="number"then local x=i(d.increment*K(T/d.increment),d.min,d.max)local M,w=d.objects.slider.Size,d.objects.slider.Position if d.min>=0 then M=a((x-d.min)/(d.max-d.min),0,1,0)else M=a(x/(d.max-d.min),0,1,0)w=a((0-d.min)/(d.max-d.min),0,0,0)end u:Tween(d.objects.slider,"Size",M,.05,Enum.EasingDirection.Out,Enum.EasingStyle.Quad)u:Tween(d.objects.slider,"Position",w,.05,Enum.EasingDirection.Out,Enum.EasingStyle.Quad)local F=(x==d.min and d.mintext~=nil)and d.mintext or(x==d.max and d.maxtext~=nil)and d.maxtext or string.format("%.14g",x)d.value=x e.flags[d.flag]=x d.objects.text.Text=P.text..(": "..(F..tostring(d.suffix)))d.objects.text.ThemeColor=(d.min<0 and x==0 or x==d.min)and(d.risky and"Risky Text"or"Option Text 3")or d.risky and"Risky Text Enabled"or"Option Text 1"if not H then d.callback(x)end end end function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T..(": "..(tostring(H.value)..tostring(H.suffix)))end end if P.default~=nil then P.value=P.default end d(P)P:SetText(P.text)P:SetValue(P.value,true)H:UpdateOptions()return P end function v.AddButton(H,T)local P={class="button",flag=T.flag,text="";suffix="";tooltip="",order=#H.options+1;callback=function() end;confirm=false;enabled=true,risky=false;objects={},subbuttons={}}local x={"objects"}for T,H in t,T do if not table.find(x,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.options[P.flag]=P end do local T=P.objects local d=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,22),Transparency=0,ZIndex=d+4,Parent=v.objects.optionholder})T.background=u:Draw("Square",{Size=a(1,-4,0,14),Position=a(0,2,0,4),ThemeColor="Option Background";ZIndex=d+2,Parent=T.holder})T.border1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Option Border 1",ZIndex=d+1,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 2",ZIndex=d;Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=e.images.gradientp90,Transparency=.65;ZIndex=d+3,Parent=T.background})T.text=u:Draw("Text",{Position=a(.5,0,0,0);ThemeColor="Option Text 3";Size=13,Font=2;ZIndex=d+4,Outline=true;Center=true,Parent=T.background})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor="Option Border 1"T.text.ThemeColor=H.risky and"Risky Text"or"Option Text 3"T.background.ThemeColor="Option Background"T.background.ThemeColorOffset=0 end)u:Connection(T.holder.MouseButton1Up,function()T.text.ThemeColor=H.risky and"Risky Text"or"Option Text 3"T.background.ThemeColor="Option Background"T.background.ThemeColorOffset=0 end)local x,M=false,false u:Connection(T.holder.MouseButton1Down,function()T.text.ThemeColor=H.risky and"Risky Text Enabled"or"Option Text 2"T.background.ThemeColor="Accent"T.background.ThemeColorOffset=-95 task.spawn(function()if P.confirm then if x then x=false M=false T.text.Text=P.text P.callback()else x=true M=true for H=3,1,-1 do if not M then break end T.text.Text="Confirm "..(P.text..("? "..tostring(H)))wait(1)end x=false M=false T.text.Text=P.text end else P.callback()end end)end)end function P.AddButton(H,T)local P={class="button",flag=T.flag,text="",suffix="";tooltip="",order=#H.subbuttons+1,callback=function() end;confirm=false;enabled=true;objects={}}local x={"objects"}for T,H in t,T do if not table.find(x,T)then P[T]=H end end table.insert(H.subbuttons,P)if P.flag then e.options[P.flag]=P end do local T=P.objects local d=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,1,0),Transparency=0;ZIndex=d+5,Parent=H.objects.holder})T.background=u:Draw("Square",{Size=a(1,-4,1,-8);Position=a(0,2,0,4);ThemeColor="Option Background",ZIndex=d+2,Parent=T.holder})T.border1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 1",ZIndex=d+1;Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Option Border 2";ZIndex=d,Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=e.images.gradientp90;Transparency=.65;ZIndex=d+3;Parent=T.background})T.text=u:Draw("Text",{Position=a(.5,0,0,0);ThemeColor="Option Text 3";Size=13,Font=2;ZIndex=d+4;Outline=true;Center=true;Parent=T.background})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor="Option Border 1"T.text.ThemeColor=H.risky and"Risky Text"or"Option Text 3"T.background.ThemeColor="Option Background"T.background.ThemeColorOffset=0 end)u:Connection(T.holder.MouseButton1Up,function()T.text.ThemeColor=H.risky and"Risky Text"or"Option Text 3"T.background.ThemeColor="Option Background"T.background.ThemeColorOffset=0 end)local x,M=false,false u:Connection(T.holder.MouseButton1Down,function()T.text.ThemeColor=H.risky and"Risky Text Enabled"or"Option Text 2"T.background.ThemeColor="Accent"T.background.ThemeColorOffset=-95 task.spawn(function()if P.confirm then if x then x=false M=false T.text.Text=P.text P.callback()else x=true M=true for H=3,1,-1 do if not M then break end T.text.Text="Confirm "..(P.text..("? "..tostring(H)))wait(1)end x=false M=false T.text.Text=P.text end else P.callback()end end)end)end function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T end end d(P)P:SetText(P.text)H:UpdateOptions()return P end function P.UpdateOptions(T)local H=1+#T.subbuttons local P=1/H-.005 T.objects.background.Size=a(P,-4,0,14)for T,H in t,T.subbuttons do H.objects.holder.Size=a(P,0,1,0)H.objects.holder.Position=a(T*P+.01,0,0,0)end end function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T end end d(P)P:SetText(P.text)H:UpdateOptions()return P end function v.AddSeparator(H,T)local P={class="separator";flag=T.flag;text="";order=#H.options+1;enabled=true,objects={}}local d={"objects","dragging"}for T,H in t,T do if not table.find(d,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.options[P.flag]=P end do local T=P.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,18);Transparency=0;ZIndex=H,Parent=v.objects.optionholder})T.line1=u:Draw("Square",{Position=a(0,0,0,1);ThemeColor="Option Background";ZIndex=H+1;Parent=T.holder})T.line2=u:Draw("Square",{Position=a(0,0,0,1);ThemeColor="Option Background";ZIndex=H+1;Parent=T.holder})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Option Border 2";ZIndex=H,Parent=T.line1})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 2",ZIndex=H,Parent=T.line2})T.text=u:Draw("Text",{Position=a(.5,0,0,1);ThemeColor="Option Text 2";Size=13;Font=2,ZIndex=H,Outline=true;Center=true;Parent=T.holder})end function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T local P=(1-u:ConvertNumberRange(H.objects.text.TextBounds.X,0,H.objects.holder.Object.Size.X,0,1))/2-(T==""and 0 or.04)H.objects.line1.Size=a(P,0,0,1)H.objects.line2.Size=a(P,0,0,1)H.objects.line1.Position=a(0,1,.5,-1)H.objects.line2.Position=a(1-H.objects.line2.Size.X.Scale,-1,.5,-1)end end P:SetText(P.text)H:UpdateOptions()return P end function v.AddColor(H,T)local x={class="color";flag=T.flag,text="",tooltip="";order=#H.options+1,callback=function() end,color=Color3.new(1,.995,.995),trans=0,open=false;enabled=true;risky=false;objects={}}local M={"objects"}for T,H in t,T do if not table.find(M,T)then x[T]=H end end table.insert(H.options,x)if x.flag then e.flags[x.flag]=x.color e.options[x.flag]=x end do local T=x.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,19),Transparency=0,ZIndex=H+5;Parent=v.objects.optionholder})T.background=u:Draw("Square",{Size=a(0,15,0,8);Position=a(1,-16,0,5),ZIndex=H+3;Parent=T.holder})T.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=e.images.gradientp45,Transparency=.25;ZIndex=H+4,Parent=T.background})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1),ThemeColor="Option Border 1";ZIndex=H+2,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Option Border 2",ZIndex=H+1,Parent=T.border1})T.text=u:Draw("Text",{Position=a(0,2,0,2),ThemeColor=x.risky and"Risky Text Enabled"or"Option Text 3",Size=13,Font=2;ZIndex=H+1,Outline=true,Parent=T.holder})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor=x.state and"Accent"or"Option Border 1"end)u:Connection(T.holder.MouseButton1Down,function()x:SetOpen(not x.open)end)end function x.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T end end function x.SetColor(d,T,H)if typeof(T)=="Color3"then local x,M,w=T:ToHSV()T=k(x,i(M,.005,.995),i(w,.005,.995))d.color=T d.objects.background.Color=T if not H then d.callback(T,d.trans)end if d.open then P.colorpicker:Visualize(d.color,d.trans)end if d.flag then e.flags[d.flag]=T end end end function x.SetTrans(d,T,H)if typeof(T)=="number"then d.trans=T if not H then d.callback(d.color,T)end if d.open then P.colorpicker:Visualize(d.color,d.trans)end end end function x.SetOpen(H,T)if typeof(T)=="boolean"then H.open=T if T then if P.colorpicker.selected then P.colorpicker.selected.open=false end P.colorpicker.selected=x P.colorpicker.objects.background.Parent=H.objects.background P.colorpicker.objects.background.Visible=true P.colorpicker:Visualize(x.color,x.trans)elseif P.colorpicker.selected==x then P.colorpicker.selected=nil P.colorpicker.objects.background.Parent=P.objects.background P.colorpicker.objects.background.Visible=false end end end d(x)x:SetText(x.text)x:SetColor(x.color,true)x:SetTrans(x.trans,true)H:UpdateOptions()return x end function v.AddBox(H,T)local P={class="box",flag=T.flag,text="",input="",order=#H.options+1,callback=function() end,enabled=true,focused=false,risky=false;objects={}}local x={"objects","dragging"}for T,H in t,T do if not table.find(x,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.flags[P.flag]=P.input e.options[P.flag]=P end do local T=P.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,37),Transparency=0,ZIndex=H+4;Parent=v.objects.optionholder})T.background=u:Draw("Square",{Size=a(1,-4,0,15),Position=a(0,2,1,-17),ThemeColor="Option Background",ZIndex=H+2;Parent=T.holder})T.border1=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Option Border 1",ZIndex=H+1;Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Option Border 2";ZIndex=H;Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0);Data=e.images.gradientp90,Transparency=.65;ZIndex=H+4,Parent=T.background})T.text=u:Draw("Text",{Position=a(0,2,0,2);ThemeColor=P.risky and"Risky Text Enabled"or"Option Text 2",Size=13;Font=2,ZIndex=H+1,Outline=true,Parent=T.holder})T.inputText=u:Draw("Text",{Position=a(0,2,0,0);ThemeColor="Option Text 2";Size=13;Font=2;ZIndex=H+5;Outline=true,Parent=T.background})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor="Option Border 1"end)u:Connection(T.holder.MouseButton1Down,function()if P.focused then P:ReleaseFocus()else P:CaptureFocus(M:IsKeyDown(Enum.KeyCode.LeftControl))if M:IsKeyDown(Enum.KeyCode.LeftControl)then T.inputText.Text=""end end end)end function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T end end function P.SetInput(P,T,H)if typeof(T)=="string"then P.input=T P.objects.inputText.Text=T if not H then P.callback(T)end if P.flag then e.flags[P.flag]=T end end end local w local F=P.input function P.CaptureFocus(H,T)P.focused=true R:BindAction("FreezeMovement",function()return Enum.ContextActionResult.Sink end,false,unpack(Enum.PlayerActions:GetEnumItems()))if T then F=""end H.objects.inputText.ThemeColor="Option Text 1"w=u:Connection(M.InputBegan,function(T)if T.KeyCode==Enum.KeyCode.Return or T.UserInputType==Enum.UserInputType.MouseButton1 then P:ReleaseFocus(true)elseif T.KeyCode==Enum.KeyCode.Escape then F=H.input H.objects.inputText.Text=F P:ReleaseFocus()elseif T.KeyCode==Enum.KeyCode.Backspace then F=F:sub(1,-2)H.objects.inputText.Text=F elseif#T.KeyCode.Name==1 or table.find(N,T.KeyCode)or T.KeyCode.Name=="Space"then local P=table.find(N,T.KeyCode)local d=T.KeyCode.Name=="Space"and" "or P~=nil and tostring(P-1)or T.KeyCode.Name if not(M:IsKeyDown(Enum.KeyCode.LeftShift)or M:IsKeyDown(Enum.KeyCode.RightShift))then d=d:lower()end F=F..d H.objects.inputText.Text=F end end)end function P.ReleaseFocus(H,T)P.focused=false H.objects.inputText.ThemeColor="Option Text 2"if not(e.open and e.flags.disablemenumovement)then R:UnbindAction("FreezeMovement")end if T then P:SetInput(F)end w:Disconnect()end d(P)P:SetText(P.text)P:SetInput(P.input,true)H:UpdateOptions()return P end function v.AddBind(H,T)local P={class="bind";flag=T.flag;text="";tooltip="";bind="none";mode="toggle",order=#H.options+1,callback=function() end,keycallback=function() end;indicatorValue=e.keyIndicator:AddValue({value="value",key="key";enabled=false});noindicator=false,state=false;nomouse=false,enabled=true,binding=false;risky=false,objects={}}local w={"objects"}for T,H in t,T do if not table.find(w,T)then P[T]=H end end table.insert(H.options,P)if P.flag then e.options[P.flag]=P end do local T=P.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,19);Transparency=0,ZIndex=H+5,Parent=v.objects.optionholder})T.text=u:Draw("Text",{Position=a(0,2,0,2),ThemeColor=P.risky and"Risky Text"or"Option Text 2",Size=13,Font=2;ZIndex=H+1,Outline=true;Parent=T.holder})T.keyText=u:Draw("Text",{ThemeColor="Option Text 3";Size=13;Font=2,ZIndex=H+1;Parent=T.holder})u:Connection(T.holder.MouseEnter,function()T.keyText.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.keyText.ThemeColor=P.binding and"Accent"or"Option Text 3"end)u:Connection(T.holder.MouseButton1Down,function()if not P.binding then P:SetKeyText("...")P.binding=true end end)end local F function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T H.indicatorValue:SetKey(T)end end function P.SetBind(H,T)if F then F:Disconnect()if P.flag then e.flags[P.flag]=false end P.callback(false)end local d="NONE"H.bind=T and T or T or H.bind if H.bind==Enum.KeyCode.Backspace then H.bind="none"else d=Z[T]or T.Name or T end H.keycallback(H.bind)H:SetKeyText(d:upper())H.indicatorValue:SetKey((H.text==nil or H.text=="")and(H.flag==nil and"unknown"or H.flag)or H.text)H.indicatorValue:SetValue("["..(d:upper().."]"))H.objects.keyText.ThemeColor=H.objects.holder.Hover and"Accent"or"Option Text 3"end function P.SetKeyText(H,T)T=tostring(T)H.objects.keyText.Text="["..(T.."]")H.objects.keyText.Position=a(1,-H.objects.keyText.TextBounds.X,0,2)end function P.Toggle(T)if P.mode=="toggle"then P.state=not P.state if P.flag then e.flags[P.flag]=P.state end P.callback(P.state)local T=P.state if P.invertindicator then T=not P.state end P.indicatorValue:SetEnabled(T and not P.noindicator)elseif P.mode=="hold"then if P.flag then e.flags[P.flag]=true end P.indicatorValue:SetEnabled((not P.invertindicator and true or false)and not P.noindicator)F=u:Connection(x.RenderStepped,function()if P.callback then P.callback(true)end end)end end function P.DisableHold(T)if F then F:Disconnect()if P.flag then e.flags[P.flag]=false end if P.callback then P.callback(false)end P.indicatorValue:SetEnabled(P.invertindicator and true or false)end end u:Connection(M.InputBegan,function(T)if M:GetFocusedTextBox()then return elseif P.binding then local H=(table.find({Enum.UserInputType.MouseButton1,Enum.UserInputType.MouseButton2;Enum.UserInputType.MouseButton3},T.UserInputType)and not P.nomouse)and T.UserInputType P:SetBind(H or not table.find(g,T.KeyCode)and T.KeyCode)P.binding=false elseif(T.KeyCode==P.bind or T.UserInputType==P.bind)and not P.binding then P:Toggle()end end)u:Connection(M.InputEnded,function(T)if P.bind~="none"then if T.KeyCode==P.bind or T.UserInputType==P.bind then P:DisableHold()end end end)d(P)P:SetBind(P.bind)P:SetText(P.text)H:UpdateOptions()return P end function v.AddList(H,T)local x={class="list",flag=T.flag;text="",selected="",tooltip="",order=#H.options+1;callback=function() end,enabled=true,multi=false;open=false,risky=false,values={};objects={}}table.insert(H.options,x)local M={"objects"}for T,H in t,T do if not table.find(M,T)then x[T]=H end end if x.flag then e.flags[x.flag]=x.selected e.options[x.flag]=x end do local T=x.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Size=a(1,0,0,40),Transparency=0;ZIndex=H+4,Parent=v.objects.optionholder})T.background=u:Draw("Square",{Size=a(1,-4,0,15),Position=a(0,2,1,-19),ThemeColor="Option Background";ZIndex=H+2;Parent=T.holder})T.border1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1),ThemeColor="Option Border 1";ZIndex=H+1,Parent=T.background})T.border2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Option Border 2",ZIndex=H;Parent=T.border1})T.gradient=u:Draw("Image",{Size=a(1,0,1,0),Data=e.images.gradientp90;Transparency=.65;ZIndex=H+4,Parent=T.background})T.text=u:Draw("Text",{Position=a(0,2,0,2);ThemeColor=x.risky and"Risky Text Enabled"or"Option Text 2",Size=13;Font=2;ZIndex=H+1,Outline=true;Parent=T.holder})T.inputText=u:Draw("Text",{Position=a(0,4,0,0),ThemeColor="Option Text 2";Text="none";Size=13;Font=2;ZIndex=H+5;Outline=true,Parent=T.background})T.openText=u:Draw("Text",{Position=a(1,-10,0,0);ThemeColor="Option Text 3";Text="+";Size=13,Font=2,ZIndex=H+5,Outline=true,Parent=T.background})u:Connection(T.holder.MouseEnter,function()T.border1.ThemeColor="Accent"end)u:Connection(T.holder.MouseLeave,function()T.border1.ThemeColor="Option Border 1"end)u:Connection(T.holder.MouseButton1Down,function()if x.open then x.open=false T.openText.Text="+"if P.dropdown.selected==x then P.dropdown.selected=nil P.dropdown.objects.background.Visible=false end else if P.dropdown.selected~=nil then P.dropdown.selected.open=false end x.open=true T.openText.Text="-"P.dropdown.selected=x P.dropdown.objects.background.Visible=true P.dropdown.objects.background.Parent=T.holder P.dropdown:Refresh()end end)end function x.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T end end function x.Select(P,T,H)T=typeof(T)=="table"and(P.multi==true and T or#T==0 and nil or T[1])or P.multi==true and{T}or T if T~=nil then P.selected=T local d=typeof(T)=="table"and(#T==0 and"none"or table.concat(T,", "))or tostring(T)local x=P.objects.inputText x.Text=d if x.TextBounds.X>P.objects.background.Object.Size.X-10 then local T=d:split("")for H=1,#T,1 do x.Text=table.concat(T,"",1,H)if x.TextBounds.X>P.objects.background.Object.Size.X-10 then x.Text=x.Text:sub(1,-6).."..."break end end end if P.flag then e.flags[P.flag]=P.selected end if not H then P.callback(P.selected)end end end function x.AddValue(H,T)table.insert(x.values,tostring(T))if P.dropdown.selected==x then P.dropdown:Refresh()end end function x.RemoveValue(H,T)if table.find(x.values,T)then table.remove(x.values,table.find(x.values,T))if P.dropdown.selected==x then P.dropdown:Refresh()end end end function x.ClearValues(T)table.clear(x.values)if P.dropdown.selected==x then P.dropdown:Refresh()end end d(x)x:Select(T.value or T.selected or x.multi and"none"or x.values[1],true)x:SetText(x.text)H:UpdateOptions()return x end function v.AddText(H,T)local P={class="text";flag=T.flag;text="",tooltip="",order=#H.options+1;enabled=true;risky=false,objects={}}local d={"objects"}for T,H in t,T do if not table.find(d,T)then P[T]=H end end if T.flag then e.options[T.flag]=P end table.insert(H.options,P)do local T=P.objects local H=e.zindexOrder.window+25 T.holder=u:Draw("Square",{Transparency=0;ZIndex=H+5;Parent=v.objects.optionholder})T.text=u:Draw("Text",{Position=a(0,2,0,2);ThemeColor=P.risky and"Risky Text Enabled"or"Option Text 2";Size=13,Font=2,ZIndex=H+1,Outline=true;Parent=T.holder})end function P.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T H.objects.holder.Size=a(1,0,0,H.objects.text.TextBounds.Y+6)v:UpdateOptions()end end P:SetText(P.text)H:UpdateOptions()return P end v:UpdateOptions()v:SetText(v.text)f:UpdateSections()return v end function F.UpdateSections(T)table.sort(T.sections,function(T,H)return T.order<H.order end)local H,P local d=15 for T,x in t,T.sections do if x.objects.background.Visible~=(x.enabled and F.selected)then x.objects.background.Visible=x.enabled and F.selected x:UpdateOptions()end if x.enabled then if x.side==1 then if H then x.objects.background.Position=H.objects.background.Position+a(0,0,0,H.objects.background.Object.Size.Y+d)end H=x elseif x.side==2 then if P then x.objects.background.Position=P.objects.background.Position+a(0,0,0,P.objects.background.Object.Size.Y+d)end P=x end end x:SetText(x.text)end end function F.SetText(H,T)if typeof(T)=="string"then H.text=T H.objects.text.Text=T P:UpdateTabs()end end function F.Select(T)P.selectedTab=F P:UpdateTabs()for T,H in t,P.tabs do if H.callback then H.callback(H==F)end end end if P.selectedTab==nil then F:Select()end F:SetText(F.text)P:UpdateTabs()return F end function P.UpdateTabs(T)table.sort(T.tabs,function(T,H)return T.order<H.order end)local H=0 for P,d in t,T.tabs do local x=d.objects d.selected=d==T.selectedTab x.background.ThemeColor=d.selected and"Selected Tab Background"or"Unselected Tab Background"x.background.Size=a(0,x.text.TextBounds.X+14,1,d.selected and 1 or 0)x.background.Position=a(0,H,0,0)x.text.ThemeColor=d.selected and"Selected Tab Text"or"Unselected Tab Text"x.text.Position=a(.5,0,0,3)x.topBorder.ThemeColor=d.selected and"Accent"or"Unselected Tab Background"H+=x.background.Size.X.Offset+1 d:UpdateSections()end end P:SetOpen(true)return P end do local T=e.zindexOrder.window+2000 H.background=u:Draw("Square",{ThemeColor="Group Background",ZIndex=T;Visible=false})H.border1=u:Draw("Square",{Size=UDim2.new(1,2,1,2);Position=UDim2.new(0,-1,0,-1);ThemeColor="Border 1";ZIndex=T-1,Parent=H.background})H.border2=u:Draw("Square",{Size=UDim2.new(1,4,1,4),Position=UDim2.new(0,-2,0,-2);ThemeColor="Border 3";ZIndex=T-2,Parent=H.background})H.text=u:Draw("Text",{Position=UDim2.new(0,3,0,0),ThemeColor="Primary Text";Size=13,Font=2;ZIndex=T+1;Outline=true;Parent=H.background})H.riskytext=u:Draw("Text",{Position=UDim2.new(0,3,0,0),ThemeColor="Risky Text Enabled";Text="[RISKY]";Size=13,Font=2,ZIndex=T+1;Outline=true;Parent=H.background})end do T.watermark={objects={},text={{T.cheatname;true},{f.Name,false},{f.DisplayName;false};{"0 fps";true},{"0ms";true},{"00:00:00";true};{"M, D, Y",true}};lock="custom";position=a(0,0,0,0),refreshrate=25}function T.watermark.Update(T)T.objects.background.Visible=e.flags.watermark_enabled if e.flags.watermark_enabled then local H={os.date("%b",os.time());os.date("%d",os.time());os.date("%Y",os.time())}local P=math.floor(H[2]%10)H[2]=H[2]..(P==1 and"st"or P==2 and"nd"or P==3 and"rd"or"th")T.text[2][1]=f.Name T.text[3][1]=f.DisplayName T.text[4][1]=e.stats.fps.." fps"T.text[5][1]=K(e.stats.ping).."ms"T.text[6][1]=os.date("%X",os.time())T.text[7][1]=table.concat(H,", ")local d={}for T,H in t,T.text do if H[2]then table.insert(d,H[1])end end T.objects.text.Text=table.concat(d," | ")T.objects.background.Size=a(0,T.objects.text.TextBounds.X+10,0,17)local x=T.objects.background.Object.Size local M=workspace.CurrentCamera.ViewportSize T.position=T.lock=="Top Right"and a(0,(M.X-x.X)-15,0,15)or T.lock=="Top Left"and a(0,15,0,15)or T.lock=="Bottom Right"and a(0,(M.X-x.X)-15,0,(M.Y-x.Y)-15)or T.lock=="Bottom Left"and a(0,15,0,(M.Y-x.Y)-15)or T.lock=="Top"and a(0,M.X/2-x.X/2,0,15)or a(e.flags.watermark_x/100,0,e.flags.watermark_y/100,0)T.objects.background.Position=T.position end end do local H=T.watermark.objects local P=T.zindexOrder.watermark H.background=u:Draw("Square",{Visible=false,Size=a(0,200,0,17);Position=a(0,800,0,100),ThemeColor="Background";ZIndex=P})H.border1=u:Draw("Square",{Size=a(1,2,1,2);Position=a(0,-1,0,-1);ThemeColor="Border 2",Parent=H.background;ZIndex=P-1})H.border2=u:Draw("Square",{Size=a(1,2,1,2),Position=a(0,-1,0,-1);ThemeColor="Border 3",Parent=H.border1,ZIndex=P-2})H.topbar=u:Draw("Square",{Size=a(1,0,0,1);ThemeColor="Accent",ZIndex=P+1;Parent=H.background})H.text=u:Draw("Text",{Position=a(.5,0,0,2);ThemeColor="Primary Text",Text="Watermark Text",Size=13;Font=2;ZIndex=P+1,Outline=true;Center=true,Parent=H.background})end end local v=tick()u:Connection(x.RenderStepped,function(T)e.stats.fps=K(1/T)e.stats.ping=F.Network.ServerStatsItem["Data Ping"]:GetValue()e.stats.sendkbps=F.DataSendKbps e.stats.receivekbps=F.DataReceiveKbps if(tick()-v)*1000>e.watermark.refreshrate then v=tick()e.watermark:Update()end end)T.keyIndicator=T.NewIndicator({title="Keybinds",pos=a(0,15,0,325);enabled=false})T:SetTheme(e.themes[1].theme)T:SetOpen(true)T.hasInit=true end function e.CreateSettingsTab(H,T)local P=T:AddTab("Settings",999)local x=P:AddSection("Config",2)local M=P:AddSection("Main",1)x:AddBox({text="Config Name";flag="configinput"})x:AddList({text="Config";flag="selectedconfig"})local function w()e.options.selectedconfig:ClearValues()for T,P in t,listfiles(H.cheatname..("/"..(H.gamename.."/configs")))do local d="."..(P:split("."))[#P:split(".")]if d==H.fileext then e.options.selectedconfig:AddValue((P:split("\\"))[#P:split("\\")]:sub(1,-(#d)-1))end end end;(x:AddButton({text="Load",confirm=true;callback=function()e:LoadConfig(e.flags.selectedconfig)end})):AddButton({text="Save";confirm=true;callback=function()e:SaveConfig(e.flags.selectedconfig)end});(x:AddButton({text="Create",confirm=true,callback=function()if e:GetConfig(e.flags.configinput)then e:SendNotification("Config \'"..(e.flags.configinput.."\' already exists."),5,o(1,0,0))return end writefile(H.cheatname..("/"..(H.gamename..("/configs/"..(e.flags.configinput..H.fileext)))),d:JSONEncode({}))w()end})):AddButton({text="Delete";confirm=true,callback=function()if e:GetConfig(e.flags.selectedconfig)then delfile(H.cheatname..("/"..(H.gamename..("/configs/"..(e.flags.selectedconfig..H.fileext)))))w()end end})x:AddButton({text="Refresh",confirm=true;callback=w})w()M:AddBind({text="Open / Close";flag="togglebind",nomouse=true;noindicator=true,default=Enum.KeyCode.LeftAlt,bind=Enum.KeyCode.LeftAlt,callback=function()e:SetOpen(not e.open)end})M:AddToggle({text="Disable Movement If Open",flag="disablemenumovement",callback=function(T)if T and e.open then R:BindAction("FreezeMovement",function()return Enum.ContextActionResult.Sink end,false,unpack(Enum.PlayerActions:GetEnumItems()))else R:UnbindAction("FreezeMovement")end end})M:AddButton({text="Join Discord";flag="joindiscord";confirm=true,callback=function()local T=syn.request({Url="http://127.0.0.1:6463/rpc?v=1",Method="POST",Headers={["Content-Type"]="application/json",Origin="https://discord.com"};Body=(game:GetService("HttpService")):JSONEncode({cmd="INVITE_BROWSER";nonce=(game:GetService("HttpService")):GenerateGUID(false),args={code="https://discord.gg/XUyqnmY3"}})})if T.Success then e:SendNotification(e.cheatname.." | joined discord",3)end end})M:AddButton({text="Copy Discord";flag="copydiscord",callback=function()setclipboard("https://discord.gg/XUyqnmY3")end})M:AddButton({text="Copy Game Invite";callback=function()setclipboard("Roblox.GameLauncher.joinGameInstance("..(game.PlaceId..(",\""..(game.JobId.."\")"))))end})M:AddButton({text="Unload",confirm=true;callback=function()e:Unload()end})M:AddSeparator({text="Keybinds"})M:AddToggle({text="Keybind Indicator",flag="keybind_indicator",callback=function(T)e.keyIndicator:SetEnabled(T)end})M:AddSlider({text="Position X";flag="keybind_indicator_x",min=0,max=100;increment=.1;value=.5;callback=function()e.keyIndicator:SetPosition(a(e.flags.keybind_indicator_x/100,0,e.flags.keybind_indicator_y/100,0))end})M:AddSlider({text="Position Y";flag="keybind_indicator_y";min=0,max=100,increment=.1,value=35,callback=function()e.keyIndicator:SetPosition(a(e.flags.keybind_indicator_x/100,0,e.flags.keybind_indicator_y/100,0))end})M:AddSeparator({text="Watermark"})M:AddToggle({text="Enabled",flag="watermark_enabled"})M:AddList({text="Position";flag="watermark_pos",selected="Custom";values={"Top","Top Left","Top Right";"Bottom Left";"Bottom Right";"Custom"},callback=function(T)e.watermark.lock=T end})M:AddSlider({text="Custom X";flag="watermark_x",suffix="%";min=0;max=100;increment=.1})M:AddSlider({text="Custom Y",flag="watermark_y",suffix="%";min=0;max=100;increment=.1})local F={"Custom"}for T,H in t,e.themes do table.insert(F,H.name)end local f=P:AddSection("Theme",2)f:AddColor({text="Accent",flag="theme_accent";default=I(255,135,255),callback=function(T)e.theme.Accent=T e:SetTheme(e.theme)end});(f:AddList({text="Presets";flag="preset_theme",values=F;callback=function(T)for H,P in t,e.themes do if P.name==T then e.options.theme_accent:SetColor(P.theme.Accent)e:SetTheme(P.theme)break end end end})):Select("Custom")return P end;(getgenv()).library=e return e
